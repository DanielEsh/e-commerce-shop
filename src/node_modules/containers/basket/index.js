import React from 'react'
import {connect} from 'react-redux'
import * as R from 'ramda'
import {Link} from 'react-router-dom'


import {
  removePhoneFromBasket,
  basketCheckout,
  cleanBasket
} from 'actions'

import {
  getBasketPhonesWithCount,
  getTotalBasketPrice
} from 'selectors'
import Header from 'components/header'
import Subscribe from 'components/subscribe'
import Footer from 'components/footer'
import Modal from 'components/endModal'
import TopHeader from "components/header/top-header";

class Basket extends React.Component {

  constructor(props){
    super(props)

    this.state = {
      phones: props.phones,
      isOpen: false
    }

  }

   renderContent = () => {
     const {phones} = this.props
     const isBasketEmpty = R.isEmpty(phones)
    return (
        <div className='backet'>
          {isBasketEmpty && <div>Ваша корзина покупок пуста</div>}
          <div className='table-responsive'>
            <table className='table-bordered table-striped table-condensed cf'>
              <tbody>
              {phones.map((phone, index) => (
                  <tr
                      key={index}
                      className='item-checout'
                  >
                    <td className='first-column-checkout'>
                      <img
                          className='img-thumbnail'
                          src={phone.image}
                          alt={phone.name}
                      />
                    </td>
                    <td>{phone.name}</td>
                    <td>{phone.price} <i className="fa fa-rub" aria-hidden="true"></i></td>
                    <td>{phone.count}</td>
                    <td>
                  <span
                      onClick={() => this.props.removePhoneFromBasket(phone.id)}
                      className='delete-cart'
                  ></span>
                    </td>
                  </tr>
              ))}
              </tbody>
            </table>
          </div>
          {
            R.not(isBasketEmpty) &&
            <div className='row'>
              <div className='pull-right total-user-checkout'>
                  <b>Всего: </b>
                  {this.props.totalPrice} <i className="fa fa-rub" aria-hidden="true"></i>
              </div>
            </div>
          }
        </div>
    )
  }
   renderSidebar = () => {
     const {phones} = this.props
     const isBasketEmpty = R.isEmpty(phones)
    return(

      <div className='backet'>
        <Link
            className='btn btn-red btn-block test'
            to='/'
        >
          <span className='glyphicon glyphicon-info-sign'></span>
          <span> Продолжить покупки</span>
        </Link>
        {
          R.not(isBasketEmpty) &&
          <div>
            <button
                onClick={this.props.cleanBasket}
                className='btn btn-default btn-block btn-mr'
            >
              <span className='glyphicon glyphicon-trash'></span>
                <span> Очистить корзину </span>
            </button>
            <button
                className='btn btn-success btn-block btn-mr'
                onClick={this.openModal}
            >
              <span className='glyphicon glyphicon-envelope'></span>
                <span> Оформить заказ </span>
            </button>
          </div>
        }
      </div>
  )}

  openModal = () => {
    this.setState({ isOpen: true });
  }

  handleCancel = () => {
    console.log('Cancel function!');
    this.setState({ isOpen: false });
  }
  render(){
    return (

        <div className='view-container'>
          <TopHeader/>
          <Header/>
          <div className='container'>
            <div className='row'>
              <div className='col-md-9'>
                {this.renderContent()}
              </div>
              <div className='col-md-3'>
                {this.renderSidebar()}
              </div>
            </div>
            <Modal
                title="Оформление заказа"
                isOpen={this.state.isOpen}
                onCancel={this.handleCancel}
            />
          </div>
          <Subscribe/>
          <Footer/>

        </div>
    )
  }
}

const mapStateToProps = state => {
  return {
    phones: getBasketPhonesWithCount(state),
    totalPrice: getTotalBasketPrice(state),
  }
}

const mapDispatchToProps = {
  removePhoneFromBasket,
  cleanBasket,
  basketCheckout
}

export default connect(mapStateToProps, mapDispatchToProps)(Basket)