import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router-dom'
import * as R from 'ramda'

import {
    fetchPhones,
    addPhoneToBasket,
    fetchCategories,
    addPhoneToWishlist,
    fetchGroups,
} from 'actions'
import {getPhones, getSearchFalse, getLoader} from 'selectors'
import Layout from 'containers/layout'
import Spinner from 'components/spinner'

class Phones extends Component {

    constructor(props) {
        super(props);
        this.state = {
            visiable: 6
        }
        this.loadMorePhones = this.loadMorePhones.bind(this)
    }

    componentDidMount() {
        this.props.fetchPhones()
        this.props.fetchCategories()
        this.props.fetchGroups()
    }

    loadMorePhones() {
        this.setState((old) => {
            return {visiable: old.visiable + 6}
        })
    }

    renderPhone(phone, index) {


        const {addPhoneToBasket} = this.props
        const {addPhoneToWishlist} = this.props


        const shortDescription = `${R.take(50, phone.description)}...`


        return (
            <div className='col-sm-4 col-lg-4 col-md-4 book-list' key={index}>
                <div className='thumbnail card'>
                    <Link to={`/phones/${phone.id}`}>

                        <img
                            className='card-img-top'
                            src={phone.image}
                            alt={phone.name}
                        />

                    </Link>

                    <div className='caption'>
                        <h4 className='text-center name'>
                            <Link to={`/phones/${phone.id}`} className='name'>
                                {phone.name}
                            </Link>
                        </h4>
                        <h4 className='text-center price'>{phone.price} <i className="fa fa-rub" aria-hidden="true"></i>
                        </h4>


                        <p>{shortDescription}</p>

                        <div className='itemButton'>
                            <button
                                className='btn'
                                onClick={() => {
                                    addPhoneToBasket(phone.id)
                                }}
                            >
                                <i className="fa fa-shopping-cart buy"></i>
                            </button>
                            <button
                                className='btn'
                                onClick={() => addPhoneToWishlist(phone.id)}
                            >
                                <i className="fa fa-heart-o wishlist"></i>
                            </button>
                            <Link
                                to={`/phones/${phone.id}`}
                                className='btn'
                            >
                                <i className="fa fa-eye view"></i>
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        )
    }

    render() {

        const {phones} = this.props
        const {emptySearch} = this.props
      const {loader} = this.props

      if (loader){
        return (
            <Layout>
              <Spinner/>
            </Layout>
        )
      }
        // const isPhonesEmpty = R.isEmpty(phones)
        return (
            <Layout>
                <div className='books row'>
                    {emptySearch && <div className='empty'>По вашему запросу ничего не найдено</div>}
                    {phones.slice(0, this.state.visiable).map((phone, index) => this.renderPhone(phone, index))}
                </div>
                <div className='row'>
                    <div className='col-md-12 center'>
                        <button
                            onClick={this.loadMorePhones}
                            className='load-more'
                        >
                            Загрузить больше
                        </button>
                    </div>
                    <div>

                    </div>
                </div>
            </Layout>
        )
    }
}

const mapStateToProps = (state, ownProps) => ({
    phones: getPhones(state, ownProps),
    emptySearch: getSearchFalse(state),
    loader: getLoader(state)
})

const mapDispatchToProps = {
    fetchPhones,
    addPhoneToBasket,
    fetchCategories,
    addPhoneToWishlist,
    fetchGroups,
}

export default connect(mapStateToProps, mapDispatchToProps)(Phones)
