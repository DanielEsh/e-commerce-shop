import React from "react";
import { Link } from 'react-router-dom';
import { Card, Form, Input, Button } from 'components/User/auth';

import FormErrors from 'components/endModal/formErrors'

class Signup extends React.Component{
    constructor(props){
        super(props)

        this.state = {
            name: '',
            email: '',
            password: '',
            nameValid: false,
            emailValid: false,
            passwordValid: false,
            formErrors: {name: '', email: '', password:''},
            formValid: false
        }
    }
    change = (e) => {
        const {name, value } = e.target
        this.setState({ [name]: value},
            () => { this.validateField(name, value) })
    }
    validateField(fieldName, value) {
        let fieldValidationErrors = this.state.formErrors;
        let nameValid = this.state.nameValid;
        let emailValid = this.state.emailValid;
        let passwordValid = this.state.passwordValid;
        switch(fieldName) {
            case 'name':
                nameValid = value.length >= 1;
                fieldValidationErrors.имя = nameValid ? '': ' должно быть заполнено';
                break;
            case 'email':
                emailValid = value.match(/^([\w.%+-]+)@([\w-]+\.)+([\w]{2,})$/i);
                fieldValidationErrors.email = emailValid ? '' : ' не корректен';
                break;
            case 'password':
                passwordValid = value.length >= 5;
                fieldValidationErrors.пароль = passwordValid ? '': ' слишком короткий';
                break;
            default:
                break;
        }
        this.setState({formErrors: fieldValidationErrors,
            nameValid: nameValid,
            emailValid: emailValid,
            passwordValid: passwordValid
        }, this.validateForm);
    }
    validateForm() {
        this.setState({formValid: this.state.emailValid && this.state.nameValid && this.state.passwordValid});
    }
    handleSubmit = (e) => {
        e.preventDefault()

        const request = new XMLHttpRequest();
        request.open('POST', 'https://telephone.su/api/users/create_user.php');
        let obj = {}
        obj['name'] = this.state.name;
        obj['email'] = this.state.email;
        obj['password'] = this.state.password;
        let json = JSON.stringify(obj);
        console.log('json', json)
        request.send(json);
        request.addEventListener('readystatechange', () => {
            document.querySelector('.info').innerHTML = 'Вы успешно зарегистрированы'
        });
    }
    render(){
        console.log(this.state)
        const {name, email, password } = this.state
        return (
            <Card>
                <h2>Регистрация</h2>
                <Form onSubmit={this.handleSubmit}>
                    <Input type="text" placeholder="name" name='name' value={name} onChange={this.change}/>
                    <Input type="email" placeholder="email" name='email' value={email} onChange={this.change}/>
                    <Input type="password" placeholder="password" name='password' value={password} onChange={this.change}/>
                    <Input type="password" placeholder="password again" />
                    <Button>Зарегистрироваться</Button>
                    <div className='info'>
                        <FormErrors formErrors={this.state.formErrors} />
                    </div>
                </Form>
                <Link to="/">Вернуться на главную</Link>
                <Link to="/login">Уже есть аккаунт? Войти</Link>
            </Card>
        );
    }

}

export default Signup;