import * as R from 'ramda'

import {
    FETCH_PHONES_START,
    FETCH_PHONES_SUCCESS,
    SEARCH_PHONE_START,
    SEARCH_PHONE_FAILURE,
    SEARCH_PHONE_SUCCESS,
    SEARCH_PRICE_START,
    SEARCH_PRICE_SUCCESS,
    SEARCH_PRICE_FAILURE
} from 'actionTypes'

const initialState = {
    ids: [],
    search: '',
    price: {
        min: '',
        max: ''
    },
    searchError: false,
    loader: true
}

export default (state = initialState, {type, payload}) => {
    switch (type) {
        case FETCH_PHONES_START :
            return R.merge(state, {
                loader: true
            })
        case FETCH_PHONES_SUCCESS :
            return R.merge(state, {
                ids: R.pluck('id', payload),
                loader: false
            })
        case SEARCH_PHONE_START :
            return R.merge(state, {
                loader: true
            })
        case SEARCH_PHONE_SUCCESS :
            return R.merge(state, {
                ids: R.pluck('id', payload),
                searchError: false,
                loader: false
            })
        case SEARCH_PHONE_FAILURE :
            return R.merge(state, {
                ids: [],
                searchError: true,
                loader: false
            })
        case SEARCH_PRICE_START :
            return R.merge(state, {
                price: {
                    min:payload.min,
                    max:payload.max
                },
                loader: true
            })
        case SEARCH_PRICE_SUCCESS:
            return R.merge(state, {
                ids: R.pluck('id', payload),
                loader: false,
                searchError: false,
            })
        case SEARCH_PRICE_FAILURE:
            return R.merge(state, {
                ids: [],
                searchError: true,
                loader: false
            })
        default:
            return state;
    }
}
