{"version":3,"sources":["index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_dom__WEBPACK_IMPORTED_MODULE_2__","react_dom__WEBPACK_IMPORTED_MODULE_2___default","redux__WEBPACK_IMPORTED_MODULE_3__","history__WEBPACK_IMPORTED_MODULE_4__","redux_thunk__WEBPACK_IMPORTED_MODULE_5__","connected_react_router__WEBPACK_IMPORTED_MODULE_6__","connected_react_router__WEBPACK_IMPORTED_MODULE_7__","redux_devtools_extension__WEBPACK_IMPORTED_MODULE_8__","react_redux__WEBPACK_IMPORTED_MODULE_9__","reducers__WEBPACK_IMPORTED_MODULE_10__","routes__WEBPACK_IMPORTED_MODULE_11__","history","createBrowserHistory","middlewares","thunk","routerMiddleware","store","createStore","createRootReducer","composeWithDevTools","applyMiddleware","apply","ReactDOM","render","a","createElement","document","getElementById"],"mappings":"6HAAAA,EAAAC,EAAAC,GAAAF,EAAA,QAAAG,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAAK,EAAAC,GAAAE,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,GAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,IAcMiB,EAAUC,cACVC,EAAc,CAACC,IAAOC,YAAiBJ,IACvCK,EAAQC,sBACZC,YAAkBP,GAClBQ,8BAAoBC,kBAAeC,WAAf,EAAmBR,KA8DzCS,IAASC,OACPzB,EAAA0B,EAAAC,cAACjB,EAAA,EAAD,CAAUQ,MAAOA,GACflB,EAAA0B,EAAAC,cAACnB,EAAA,EAAD,CAAiBK,QAASA,GACxBb,EAAA0B,EAAAC,cAACf,EAAA,EAAD,QAGJgB,SAASC,eAAe","file":"static/js/main.1f6af028.chunk.js","sourcesContent":["import './main.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport {createBrowserHistory} from 'history'\nimport thunk from 'redux-thunk'\nimport {routerMiddleware, ConnectedRouter} from 'connected-react-router'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {Provider} from 'react-redux'\n\nimport createRootReducer from 'reducers'\nimport App from 'routes'\n\nconst history = createBrowserHistory()\nconst middlewares = [thunk, routerMiddleware(history)]\nconst store = createStore(\n  createRootReducer(history),\n  composeWithDevTools(applyMiddleware(...middlewares))\n)\n/*TODO\n\n\n\n\n1. Нормальный поиск по api (обработка ошибок) +\n2. фильтры по цене +\n8. smooth scroll по ссылка в footer до header +\nНормальный вывод характеристик +\n                                            9. рендеринг похожих товаров\n                                            10. Сохранение корзины в localstorage и списка избранного\n                                            11. Server-Side rendering\n                                            12. Рефакторинг всего кода\n                                            13. Попробовать нормальные картинки\n                                            14. В корзине стрелочки изменения количества товара\n                                            15. Закрепление матриала\n                                            16. Сделать нормальное описание\n                                            поправить весь CSS\nстраницу 404\nпрелоадер +\n                                            тултипы\n                                            нормальная пагинация\n                                            на странице товара слайдер из нескольких изображений\n\n\nЕще\nСтраница с завершением заказа, а не модалка\nПромокод\nСтраница заполняется если пользователь зарегистрирован автоматически\n\n\n\nКак реализовать похожии товары?\nПри переходе на страницу конкретного товара на сервер отправляется запрос содержащий id товара\nс сервера приходят все товары, которые имеют такую же категорию, бренд\nне больше 10 товаров\n\nтекущий id не должен учитываться\n\nКак реализовать топ товары?\nПри покупке товара в базу данных добавляется счетчик покупок\nпо этому счетчику формируется топ-10  самых продаваемых товаров\n\nНовинки\nПросто выводить последнии 10 добавленных товаров в бд как READ php\n\nглавная страница\n-хедер\n-категории\n-слайдер-баннер с акциями\n-новинки\n-лучшие продукты\n-баннер по категориям\n-подписаться на рассылку\n-футер\n\n\nНа страницу доставка прикрутить google maps и точками\n*/\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}